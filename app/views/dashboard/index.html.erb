<!DOCTYPE html>
<html>

<head>
  <title>FeedCo</title>
  <%= stylesheet_link_tag 'application' , media: 'all' %>
</head>

<body>
  <div class="dashboard">
    <header class="dashboard-header">
      <h1>FeedCo</h1>
    </header>
    <div class="dashboard-content">
      <div class="widget-row">
        <div class="widget">
          <h2>Purchasing</h2>
          <!-- Insert graph here -->
        </div>
        <div class="widget">
          <h2>Inventory</h2>
          <!-- Insert graph here -->
        </div>
        <div class="widget">
          <h2>Sales</h2>
          <!-- Insert graph here -->
        </div>
      </div>
      <div class="widget-row">
        <div class="widget large-widget">
          <div id="container"></div>
        </div>
        <div class="widget">
          <h3>Sales Last Quarter</h3>
          <!-- Insert graph here -->
        </div>
      </div>
    </div>
  </div>
</body>

</html>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const container = document.getElementById('container');
    if (!container) {
      console.error('Container element not found');
      return;
    }

    const purchaseOrderData = <%= @purchase_order_data.to_json.html_safe %>;

    if (!purchaseOrderData || Object.keys(purchaseOrderData).length === 0) {
      console.error('Purchase order data is empty or not defined');
      return;
    }

    Highcharts.chart('container', {
      chart: {
        type: 'line'
      },
      title: {
        text: 'Monthly Purchase Order Data'
      },
      subtitle: {
        text: 'Last Six Months'
      },
      xAxis: {
        categories: ['January', 'February', 'March', 'April', 'May', 'June'] // Adjust this based on the current month
      },
      yAxis: {
        title: {
          text: 'Purchase Order Count'
        }
      },
      plotOptions: {
        line: {
          dataLabels: {
            enabled: true
          },
          enableMouseTracking: true
        }
      },
      series: Object.keys(purchaseOrderData).map(productName => ({
        name: productName,
        data: purchaseOrderData[productName]
      }))
    });
  });
</script>